/**
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteDocumentRequest model module.
 * @module model/DeleteDocumentRequest
 * @version 8.1.0
 */
class DeleteDocumentRequest {
    /**
     * Constructs a new <code>DeleteDocumentRequest</code>.
     * Payload for delete request. Documents can be deleted either one by one by specifying the document id or by providing a query object. For more information see  [Delete API](https://manual.manticoresearch.com/Deleting_documents) 
     * @alias module:model/DeleteDocumentRequest
     * @param table {String} Table name
     */
    constructor(table) { 
        
        DeleteDocumentRequest.initialize(this, table);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, table) { 
        obj['table'] = table;
    }

    /**
     * Constructs a <code>DeleteDocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteDocumentRequest} obj Optional instance to populate.
     * @return {module:model/DeleteDocumentRequest} The populated <code>DeleteDocumentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteDocumentRequest();

            if (data.hasOwnProperty('table')) {
                obj['table'] = ApiClient.convertToType(data['table'], 'String');
            }
            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = ApiClient.convertToType(data['cluster'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteDocumentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteDocumentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteDocumentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['table'] && !(typeof data['table'] === 'string' || data['table'] instanceof String)) {
            throw new Error("Expected the field `table` to be a primitive type in the JSON string but got " + data['table']);
        }
        // ensure the json data is a string
        if (data['cluster'] && !(typeof data['cluster'] === 'string' || data['cluster'] instanceof String)) {
            throw new Error("Expected the field `cluster` to be a primitive type in the JSON string but got " + data['cluster']);
        }

        return true;
    }


}

DeleteDocumentRequest.RequiredProperties = ["table"];

/**
 * Table name
 * @member {String} table
 */
DeleteDocumentRequest.prototype['table'] = undefined;

/**
 * Cluster name
 * @member {String} cluster
 */
DeleteDocumentRequest.prototype['cluster'] = undefined;

/**
 * The ID of document for deletion
 * @member {Number} id
 */
DeleteDocumentRequest.prototype['id'] = undefined;

/**
 * Defines the criteria to match documents for deletion
 * @member {Object} query
 */
DeleteDocumentRequest.prototype['query'] = undefined;






export default DeleteDocumentRequest;

